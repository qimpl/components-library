name: Code Quality

on:
  push:
  pull_request:
    types: [opened, labeled]

jobs:
  eslint:
    runs-on: ubuntu-latest
    name: Lint JavaScript code
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: '14.x'
      - name: Cache node modules
        uses: actions/cache@v1
        with:
          path: node_modules
          key: ${{ runner.OS }}-build-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.OS }}-build-${{ env.cache-name }}-
            ${{ runner.OS }}-build-
            ${{ runner.OS }}-
      - run: npm install
        env:
          CI: TRUE
      - name: Lint JavaScript code
        run: npm run lint:js
      - name: Create Eslint Report
        run: npm run lint:js:report
        continue-on-error: true
      - name: Annotate Code Linting Results
        uses: ataylorme/eslint-annotate-action@1.1.2
        with:
          repo-token: '${{ secrets.GITHUB_TOKEN }}'
          report-json: 'eslint_report.json'
      - name: Upload ESLint report
        uses: actions/upload-artifact@v1
        with:
          name: eslint_report.json
          path: eslint_report.json

  prettier:
    runs-on: ubuntu-latest
    name: Check Code Formatting
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: '14.x'
      - name: Cache node modules
        uses: actions/cache@v1
        with:
          path: node_modules
          key: ${{ runner.OS }}-build-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.OS }}-build-${{ env.cache-name }}-
            ${{ runner.OS }}-build-
            ${{ runner.OS }}-
      - run: npm install
        env:
          CI: TRUE
      - name: Check JavaScript Formatting
        run: npm run prettier
