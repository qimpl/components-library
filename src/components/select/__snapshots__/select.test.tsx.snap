// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Default select 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <div
        class="sc-bdfBwQ gkORIc"
      >
        <label
          for="my-select"
        >
          Choose
        </label>
        <select
          id="my-select"
          name="my-select"
        >
          <option
            disabled=""
            value=""
          >
            Select
          </option>
          <option
            value="1"
          >
            1st value
          </option>
          <option
            value="2"
          >
            2nd value
          </option>
          <option
            value="3"
          >
            3rd value
          </option>
        </select>
      </div>
    </div>
  </body>,
  "container": <div>
    <div
      class="sc-bdfBwQ gkORIc"
    >
      <label
        for="my-select"
      >
        Choose
      </label>
      <select
        id="my-select"
        name="my-select"
      >
        <option
          disabled=""
          value=""
        >
          Select
        </option>
        <option
          value="1"
        >
          1st value
        </option>
        <option
          value="2"
        >
          2nd value
        </option>
        <option
          value="3"
        >
          3rd value
        </option>
      </select>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`Pre-selected value 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <div
        class="sc-bdfBwQ gkORIc"
      >
        <label
          for="my-select"
        >
          Choose
        </label>
        <select
          id="my-select"
          name="my-select"
        >
          <option
            disabled=""
            value=""
          >
            Select
          </option>
          <option
            value="1"
          >
            1st value
          </option>
          <option
            value="2"
          >
            2nd value
          </option>
          <option
            value="3"
          >
            3rd value
          </option>
        </select>
      </div>
    </div>
  </body>,
  "container": <div>
    <div
      class="sc-bdfBwQ gkORIc"
    >
      <label
        for="my-select"
      >
        Choose
      </label>
      <select
        id="my-select"
        name="my-select"
      >
        <option
          disabled=""
          value=""
        >
          Select
        </option>
        <option
          value="1"
        >
          1st value
        </option>
        <option
          value="2"
        >
          2nd value
        </option>
        <option
          value="3"
        >
          3rd value
        </option>
      </select>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`Select with errror 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <div
        class="sc-bdfBwQ hVVFSP"
      >
        <label
          for="error-select"
        >
          Choose
        </label>
        <select
          id="error-select"
          name="error-select"
        >
          <option
            disabled=""
            value=""
          >
            Select
          </option>
          <option
            value="1"
          >
            1st value
          </option>
          <option
            value="2"
          >
            2nd value
          </option>
          <option
            value="3"
          >
            3rd value
          </option>
        </select>
        <span>
          Select a value
        </span>
      </div>
    </div>
  </body>,
  "container": <div>
    <div
      class="sc-bdfBwQ hVVFSP"
    >
      <label
        for="error-select"
      >
        Choose
      </label>
      <select
        id="error-select"
        name="error-select"
      >
        <option
          disabled=""
          value=""
        >
          Select
        </option>
        <option
          value="1"
        >
          1st value
        </option>
        <option
          value="2"
        >
          2nd value
        </option>
        <option
          value="3"
        >
          3rd value
        </option>
      </select>
      <span>
        Select a value
      </span>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`Select without label 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <div
        class="sc-bdfBwQ gkORIc"
      >
        <select
          id="select-no-label"
          name="select-no-label"
        >
          <option
            disabled=""
            value=""
          >
            Select
          </option>
          <option
            value="1"
          >
            1st value
          </option>
          <option
            value="2"
          >
            2nd value
          </option>
          <option
            value="3"
          >
            3rd value
          </option>
        </select>
      </div>
    </div>
  </body>,
  "container": <div>
    <div
      class="sc-bdfBwQ gkORIc"
    >
      <select
        id="select-no-label"
        name="select-no-label"
      >
        <option
          disabled=""
          value=""
        >
          Select
        </option>
        <option
          value="1"
        >
          1st value
        </option>
        <option
          value="2"
        >
          2nd value
        </option>
        <option
          value="3"
        >
          3rd value
        </option>
      </select>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;
